What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository, a .git directory is created. This is
necessary in order to run git commands in that directory, s.a. git status, git
commit, etc.

======

How is the staging area different from the working directory and the
repository? What value do you think it offers?

The staging area is different from the working directory and the repository in
that it is an intermediate step. Here you can add files from the working
directory to the repository. It allows you to individually (or in bulk) files
to be committed to the repository. This means you can group files that
constitute a single logical change. Furthermore, you can double-check if what
is in the staging area is the actual stuff that you want to commit. If not, you
can remove files with "git reset".

======

How can you use the staging area to make sure you have one commit per logical
change?

You can use the staging area to group files before you commit them. You can
execute the command "git status" before committing to review what you put in
the staging area.

======

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Some situations when branches would be helpful is when you have several people
working on a project, and some are working on the master branch, and others are
coding up an experimental feature. Also, if you want to use a different
language, say have a Spanish version of your project, it makes sense to put
this in a separate branch.
